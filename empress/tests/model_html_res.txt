<body>
<div class="container">
<canvas class="tree-surface">
Your browser does not support HTML5
</canvas>
<div id="divcontainer"></div>
</div>
<div class="metadata-tabs">
<div class="tab-options">
<div>
<button class="tabs" onclick="showMenu('leaf')">Highlight Tips</button>
</div>
<div>
<button class="tabs" onclick="showMenu('internal')">Color Clade</button>
</div>
</div>
<div class="menu" id="highlight-menu">
<div>
<select id = "highlight-options"></select>
</div>
<div>
<input id="select-data" type = "button" value = "select"/>
<input type = "color" id="color-selector"/>
</div>
<div class="text-field">
<label for="lower-bound">Lower Bound</label>
<input type="text" id="lower-bound"/>
</div>
<div class="text-field">
<label for="upper-bound">Upper Bound</label>
<input type="text" id="upper-bound"/>
</div>
<div class="text-field">
<label for="category">Equals to</label>
<input type="text" id="category"/>
</div>
<div class="attr-selector">
</div>
</div>
</div>
<table>
<tr>
<td valign="top">
<div id="scrolltable"></div>
</td>
</tr>
</table>
<script type="text/javascript">
// global variables
};
let field = {
edgeFields: ["px", "py", "branch_color", "x", "y",
"branch_color"],
nodeFields: ["x", "y", "color"]
};
let shaderProgram = {};
// the complied vertex/fragment shaders
let gl = {}; // webgl context - used to call webgl functions
let drawingData = { // stores info need to draw such as vertex data
isMouseDown: false,
lastMouseX: null,
lastMouseY: null,
zoomAmount: 10,
maxZoom: 30,
coloredClades: []
};
let numAttr = 0;
let attrItem = {};
let labels = {};
let numUserSelects = 0;
const INIT_COLOR = "FFFFFF";
let camera = {};
</script>
<script type="text/javascript">
{
let edgeMetadata;
let nodeCoords;
// this may cause some syncing issues
$.getJSON(urls.leafHeadersURL, function(data) {
field.leaf_headers = data;
}).done(function() {
$.getJSON(urls.internalHeadersURL, function(data) {
field.internal_headers = data;
}).done(function() {
drawingData.nodeCoords = [0, 0, 0, 0, 0];
$.getJSON(urls.edgeURL, function(data) {
edgeMetadata = data;
}).done(function() {
showMenu("leaf");
drawingData.edgeCoords = extractInfo(edgeMetadata,field.edgeFields);
fillTable(INIT_COLOR);
normalizeTree(edgeMetadata);
initWebGl();
initCallbacks();
setPerspective();
requestAnimationFrame(loop);
});
});
});
}
</script>
</body>
</html>
